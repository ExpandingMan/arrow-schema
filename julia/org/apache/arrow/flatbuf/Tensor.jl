# automatically generated by the FlatBuffers compiler, do not modify

org.apache.arrow.flatbuf.eval(quote


FlatBuffers.@with_kw mutable struct Tensor{A, B, C}
    type_type::UInt8 = 0
#=
#  The type of data contained in a value cell. Currently only fixed-width
#  value types are supported, no strings or nested types
=#
    type::A = nothing
#=
#  The dimensions of the tensor, optionally named
=#
    shape::Vector{B} = []
#=
#  Non-negative byte offsets to advance one value cell along each dimension
#  If omitted, default to row-major order (C-like).
=#
    strides::Vector{Int64} = []
#=
#  The location and size of the tensor's data
=#
    data::Union{C, Nothing} = nothing
end
FlatBuffers.@ALIGN(Tensor, 1)
FlatBuffers.slot_offsets(::Type{T}) where {T<:Tensor} = [
    0x00000004, 0x00000006, 0x00000008, 0x0000000A, 
    0x0000000C
]
FlatBuffers.root_type(::Type{T}) where {T<:Tensor} = true

Tensor(buf::AbstractVector{UInt8}) = FlatBuffers.read(Tensor{Type, TensorDim, Buffer}, buf)
Tensor(io::IO) = FlatBuffers.deserialize(io, Tensor{Type, TensorDim, Buffer})

end)

