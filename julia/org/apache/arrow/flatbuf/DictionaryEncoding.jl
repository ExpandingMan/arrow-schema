# automatically generated by the FlatBuffers compiler, do not modify

org.apache.arrow.flatbuf.eval(quote


FlatBuffers.@with_kw mutable struct DictionaryEncoding{A}
#=
#  The known dictionary id in the application where this data is used. In
#  the file or streaming formats, the dictionary ids are found in the
#  DictionaryBatch messages
=#
    id::Int64 = 0
#=
#  The dictionary indices are constrained to be positive integers. If this
#  field is null, the indices must be signed int32
=#
    indexType::Union{A, Nothing} = nothing
#=
#  By default, dictionaries are not ordered, or the order does not have
#  semantic meaning. In some statistical, applications, dictionary-encoding
#  is used to represent ordered categorical data, and we provide a way to
#  preserve that metadata here
=#
    isOrdered::Bool = false
    dictionaryKind::DictionaryKind = 0
end
FlatBuffers.@ALIGN(DictionaryEncoding, 1)
FlatBuffers.slot_offsets(::Type{T}) where {T<:DictionaryEncoding} = [
    0x00000004, 0x00000006, 0x00000008, 0x0000000A
]

DictionaryEncoding(buf::AbstractVector{UInt8}) = FlatBuffers.read(DictionaryEncoding{Int}, buf)
DictionaryEncoding(io::IO) = FlatBuffers.deserialize(io, DictionaryEncoding{Int})

end)

