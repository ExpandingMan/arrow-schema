# automatically generated by the FlatBuffers compiler, do not modify

org.apache.arrow.flatbuf.eval(quote


FlatBuffers.@with_kw mutable struct SparseTensor{A, B, C, D}
    type_type::UInt8 = 0
#=
#  The type of data contained in a value cell.
#  Currently only fixed-width value types are supported,
#  no strings or nested types.
=#
    type::A = nothing
#=
#  The dimensions of the tensor, optionally named.
=#
    shape::Vector{B} = []
#=
#  The number of non-zero values in a sparse tensor.
=#
    non_zero_length::Int64 = 0
    sparseIndex_type::UInt8 = 0
#=
#  Sparse tensor index
=#
    sparseIndex::C = nothing
#=
#  The location and size of the tensor's data
=#
    data::Union{D, Nothing} = nothing
end
FlatBuffers.@ALIGN(SparseTensor, 1)
FlatBuffers.slot_offsets(::Type{T}) where {T<:SparseTensor} = [
    0x00000004, 0x00000006, 0x00000008, 0x0000000A, 
    0x0000000C, 0x0000000E, 0x00000010
]
FlatBuffers.root_type(::Type{T}) where {T<:SparseTensor} = true

SparseTensor(buf::AbstractVector{UInt8}) = FlatBuffers.read(SparseTensor{Type, TensorDim, SparseTensorIndex, Buffer}, buf)
SparseTensor(io::IO) = FlatBuffers.deserialize(io, SparseTensor{Type, TensorDim, SparseTensorIndex, Buffer})

end)

