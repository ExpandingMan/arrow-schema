# automatically generated by the FlatBuffers compiler, do not modify

org.apache.arrow.flatbuf.eval(quote


FlatBuffers.@with_kw mutable struct DictionaryBatch{A}
#=
#  For sending dictionary encoding information. Any Field can be
#  dictionary-encoded, but in this case none of its children may be
#  dictionary-encoded.
#  There is one vector / column per dictionary, but that vector / column
#  may be spread across multiple dictionary batches by using the isDelta
#  flag
=#
    id::Int64 = 0
    data::Union{A, Nothing} = nothing
#=
#  If isDelta is true the values in the dictionary are to be appended to a
#  dictionary with the indicated id. If isDelta is false this dictionary
#  should replace the existing dictionary.
=#
    isDelta::Bool = false
end
FlatBuffers.@ALIGN(DictionaryBatch, 1)
FlatBuffers.slot_offsets(::Type{T}) where {T<:DictionaryBatch} = [
    0x00000004, 0x00000006, 0x00000008
]

DictionaryBatch(buf::AbstractVector{UInt8}) = FlatBuffers.read(DictionaryBatch{RecordBatch}, buf)
DictionaryBatch(io::IO) = FlatBuffers.deserialize(io, DictionaryBatch{RecordBatch})

end)

